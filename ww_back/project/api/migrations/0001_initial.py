# Generated by Django 4.2 on 2023-04-19 12:45

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('descr', models.TextField()),
                ('image', models.CharField(max_length=255)),
                ('descr_short', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('descr', models.TextField()),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.TextField()),
                ('datasheet', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('descr', models.TextField()),
                ('descr_short', models.CharField(max_length=255)),
                ('sub_cat', models.CharField(max_length=255)),
                ('price', models.FloatField()),
                ('amount', models.IntegerField()),
                ('is_available', models.BooleanField()),
                ('rating', models.FloatField()),
                ('cat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.category')),
            ],
            options={
                'ordering': ['-price', '-amount'],
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('cost', models.FloatField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField()),
                ('prod_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.product')),
                ('ship_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shipping')),
            ],
            options={
                'verbose_name_plural': 'Histories',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('likes', models.IntegerField(blank=True, default=0)),
                ('dislikes', models.IntegerField(blank=True, default=0)),
                ('prod_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price', models.FloatField()),
                ('prod_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.product')),
                ('ship_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shipping')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('surname', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('creditcard', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(choices=[('ALMATY', 'Almaty'), ('ASTANA', 'Astana'), ('SHYMKENT', 'Shymkent'), ('KARAGANDY', 'Karagandy'), ('AKTAU', 'Aktau'), ('ATYRAU', 'Atyrau'), ('SEMEI', 'Semei'), ('UST-KAMENOGORSK', 'Ust-Kamenogorsk'), ('AKTOBE', 'Aktobe'), ('KYZYLORDA', 'Kyzylorda'), ('PETROPAVLOVSK', 'Petropavlovsk'), ('PAVLODAR', 'Pavlodar'), ('URALSK', 'Uralsk')], default='ASTANA', max_length=255)),
                ('profile_pic', models.CharField(blank=True, default='default-profile-pic.jpg', max_length=255)),
                ('show_news', models.BooleanField(blank=True, default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('prefered_cat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.category')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
